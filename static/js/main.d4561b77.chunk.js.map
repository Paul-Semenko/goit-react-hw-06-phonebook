{"version":3,"sources":["components/ContactList/style.module.css","redux/actions.js","redux/reducers.js","redux/store.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.jsx","index.js","components/ContactForm/Style.module.css","components/Filter/style.module.css"],"names":["module","exports","contactSubmit","createAction","changeFilter","contactRemove","reducer","createReducer","state","action","contacts","find","el","name","payload","alert","data","number","id","uuid","localStorage","setItem","JSON","stringify","filter","elem","preloadState","contact","getItem","parse","initialState","store","configureStore","middleware","getDefaultMiddleware","concat","logger","preloadedState","devTools","process","connect","dispatch","handleSubmit","nameInputId","numberInputId","useState","setName","setNumber","handleInputChange","event","currentTarget","value","onSubmit","e","preventDefault","className","style","form","htmlFor","form__title","type","pattern","title","required","onChange","form__input","form__button","handleRemove","target","contacts__list","arr","toLowerCase","split","i","length","match","map","contacts__item","onClick","contact__button","handleChange","filter__title","autoComplete","filter__input","App","contacts__title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4561b77.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__button\":\"style_contact__button__3G4Ty\",\"contacts__list\":\"style_contacts__list__2R-si\",\"contacts__item\":\"style_contacts__item__FtzR5\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const contactSubmit = createAction('contactSubmit');\r\nexport const changeFilter = createAction('changeFilter');\r\nexport const contactRemove = createAction('contactRemove');","import { v4 as uuid } from \"uuid\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { contactSubmit, changeFilter, contactRemove } from \"./actions\";\r\n\r\nfunction contactAdd(state = {}, action) {\r\n    if (!state.contacts.find((el) => el.name === action.payload[0])) {\r\n        const data = [...state.contacts, { name: action.payload[0], number: action.payload[1], id: uuid() }];\r\n        localStorage.setItem('contacts', JSON.stringify(data));\r\n        return { ...state, contacts: data };\r\n    } else {\r\n        alert(`${action.payload[0]} is already in contacts`);\r\n        return state;\r\n        }\r\n}\r\n\r\nfunction contactFilter(state = {}, action) {\r\n    return { ...state, filter: action.payload };\r\n}\r\n\r\nfunction contactDelete(state = {}, action) {\r\n    const data = state.contacts.filter((elem) => elem.id !== action.payload);\r\n    localStorage.setItem('contacts', JSON.stringify(data));\r\n    return { ...state, contacts: data };\r\n}\r\n\r\nexport const reducer = createReducer({}, {\r\n    [contactSubmit]: contactAdd,\r\n    [changeFilter]: contactFilter,\r\n    [contactRemove]: contactDelete,\r\n})","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport logger from 'redux-logger';\r\nimport { reducer } from \"./reducers\";\r\n\r\nconst initialState = () => {\r\n    const contact = localStorage.getItem('contacts');\r\n    if (contact) {\r\n      return JSON.parse(contact);\r\n    } else { return []; }\r\n};\r\n    \r\nconst preloadState = {\r\n    contacts: initialState(),\r\n    filter: '',\r\n}\r\n\r\nconst store = configureStore({\r\n    reducer,\r\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\r\n    preloadedState: preloadState,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n\r\n\r\nexport default store;","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { contactSubmit } from '../../redux/actions';\r\nimport style from './Style.module.css';\r\n\r\n\r\n\r\nfunction ContactForm({handleSubmit}) {\r\n    const nameInputId = uuid();\r\n    const numberInputId = uuid();\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    \r\n    const handleInputChange = (event) => {\r\n        if (event.currentTarget.name === 'name') {\r\n            setName(event.currentTarget.value);\r\n        } else if (event.currentTarget.name === 'number') {\r\n            setNumber(event.currentTarget.value);\r\n    }\r\n        \r\n    };\r\n     \r\n    return (\r\n        <>\r\n        <form onSubmit={(e) => {\r\n            e.preventDefault();\r\n            handleSubmit([name, number]);\r\n            setName('');\r\n        setNumber('')\r\n        }}\r\n            className={style.form}>\r\n                <h1>Phonebook</h1>\r\n          <label htmlFor={nameInputId} className={style.form__title}>Name\r\n        <input\r\n  type=\"text\"\r\n  name=\"name\"\r\n  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        value={name}\r\n                        onChange={handleInputChange}\r\n                        id={nameInputId}\r\n                        className={style.form__input}\r\n                        \r\n          />\r\n          </label>\r\n          <label htmlFor={numberInputId} className={style.form__title}>Number\r\n          <input\r\n  type=\"tel\"\r\n  name=\"number\"\r\n  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n  title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    value={number}\r\n                        onChange={handleInputChange}\r\n                        id={numberInputId}\r\n                        className={style.form__input}\r\n/>\r\n         </label> \r\n          <button className={style.form__button}>Add contact</button>\r\n        </form>\r\n        </>\r\n    )\r\n    \r\n}\r\n\r\nconst dispatchProps = dispatch => ({\r\n    handleSubmit: data => dispatch(contactSubmit(data))\r\n});\r\nexport default connect(null, dispatchProps)(ContactForm);\r\n\r\n ContactForm.propTypes = {\r\n    handleSubmit: PropTypes.func,\r\n}","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport { contactRemove } from '../../redux/actions';\r\nimport style from './style.module.css';\r\n\r\n\r\n function  ContactList ({contacts, filter, handleRemove}) {\r\n \r\n  const handleFilter = () => {\r\n    return contacts.filter((el) => {\r\n      const arr = el.name.toLowerCase().split(\" \");\r\n\r\n      for (let i = 0; i < arr.length; i++) {\r\n        if (arr[i].toLowerCase().match(filter) !== null) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    });\r\n};\r\n    return (\r\n      <ul className={style.contacts__list} >\r\n        {handleFilter().map((el) => (\r\n          <li key={el.id} className={style.contacts__item}>\r\n            {el.name} : {el.number}\r\n           <button\r\n              type=\"button\"\r\n              id={el.id}\r\n            onClick={handleRemove}\r\n                    className={style.contact__button}\r\n            >\r\n              Delete\r\n            </button>\r\n            </li>            \r\n        ))}\r\n            \r\n        </ul>\r\n         \r\n    );\r\n}\r\n\r\n\r\nconst stateProps = state => {\r\n  return {\r\n    contacts: state?.contacts?? [],\r\n    filter: state?.filter??''\r\n  }\r\n};\r\n\r\nconst dispatchProps = dispatch => ({\r\n  handleRemove: e => dispatch(contactRemove(e.target.id))\r\n});\r\n\r\nexport default connect(stateProps, dispatchProps)(ContactList);\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array,\r\n    handleRemove: PropTypes.func,\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { changeFilter } from '../../redux/actions';\r\nimport style from './style.module.css';\r\n\r\n function Filter({handleChange}) {\r\n  \r\n    return (\r\n      <>\r\n        <label htmlFor=\"search\" className={style.filter__title}>\r\n          Find contacts by name\r\n        \r\n        <input\r\n          \r\n                    autoComplete=\"off\"\r\n                    id=\"search\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]\"\r\n                    onChange={(e) => {\r\n                        e.preventDefault();\r\n                        handleChange(e);\r\n                    }}\r\n                    className={style.filter__input}\r\n            ></input>\r\n            </label>\r\n      </>\r\n    );\r\n}\r\n\r\nconst dispatchProps = dispatch => ({\r\n  handleChange: e => dispatch(changeFilter(e.target.value.toLowerCase()))\r\n});\r\n\r\nexport default connect(null, dispatchProps)(Filter);\r\n\r\nFilter.propTypes = {\r\n    handleChange: PropTypes.func,\r\n}\r\n\r\n","\nimport style from './components/Filter/style.module.css';\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList  from './components/ContactList/ContactList';\nimport Filter from \"./components/Filter/Filter\";\n\n\nexport default function App() {\n  \nreturn (\n      <div>\n        <ContactForm/>\n        <h2 className={style.contacts__title}>Contacts</h2>\n        <Filter/>\n        <ContactList/>\n      </div>\n    );\n\n  \n}\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store ={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Style_form__3A5vN\",\"form__title\":\"Style_form__title__tTjKD\",\"form__input\":\"Style_form__input__jJzPP\",\"form__button\":\"Style_form__button__12dG9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__title\":\"style_filter__title__2de1-\",\"filter__input\":\"style_filter__input__lYwKD\",\"contacts__title\":\"style_contacts__title__ctBsg\"};"],"sourceRoot":""}